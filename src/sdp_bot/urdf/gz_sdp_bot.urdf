<?xml version="1.0"?>
<robot name="all_bot" xmlns:xacro="http://www.ros.org.wiki/xacro">

	<xacro:macro name="inertial_sphere" params="mass radius *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(2/5) * mass * (radius*radius)}" ixy="0.0" ixz="0.0"
                    iyy="${(2/5) * mass * (radius*radius)}" iyz="0.0"
                    izz="${(2/5) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>  


    <xacro:macro name="inertial_box" params="mass x y z *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (y*y+z*z)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (x*x+z*z)}" iyz="0.0"
                    izz="${(1/12) * mass * (x*x+y*y)}" />
        </inertial>
    </xacro:macro>


    <xacro:macro name="inertial_cylinder" params="mass length radius *origin">
        <inertial>
            <xacro:insert_block name="origin"/>
            <mass value="${mass}" />
            <inertia ixx="${(1/12) * mass * (3*radius*radius + length*length)}" ixy="0.0" ixz="0.0"
                    iyy="${(1/12) * mass * (3*radius*radius + length*length)}" iyz="0.0"
                    izz="${(1/2) * mass * (radius*radius)}" />
        </inertial>
    </xacro:macro>

	<material name="black">
		<color rgba="0 0 0 1" />
	</material>

	<material name="yellow">
		<color rgba="1 1 0 1" />
	</material>

	<material name="green">
		<color rgba="0 1 0 1" />
	</material>

	<link name="base_footprint">
        <xacro:inertial_box mass="0" x="0" y="0" z="0">
            <origin xyz="0 0 0" rpy="0 0 0" />
        </xacro:inertial_box>
    </link>


	<link name="base_link">
		<visual>
			<geometry>
				<box size="0.2413 0.1016 0.0635" />
			</geometry>
			<origin xyz="0 0 0 " rpy="0 0 0" />
			<material name="black" />
		</visual>
		<collision>
			<geometry>
				<box size="0.2413 0.1016 0.0635" />
			</geometry>
			<origin xyz="0 0 0 " rpy="0 0 0" />
		</collision>
		<xacro:inertial_box mass = "0.5" x="0.2413" y="0.1016" z="0.0635">
			<origin xyz="0 0 0" rpy="0 0 0" />
		</xacro:inertial_box>
	</link>

	<link name="lidar_link">
		<visual>
			<geometry>
				<cylinder radius="0.03502" length="0.05715" />
			</geometry>
			<origin xyz="0 0 0" rpy="0 0 0" />
			<material name="green" />
		</visual> 
		<collision>
			<geometry>
				<box size="0.07004 0.07004 0.05715" />	
			</geometry>
			<origin xyz="0 0 0" rpy="0 0 0" />
		</collision>
		<xacro:inertial_cylinder mass = "0.1" radius="0.03502" length="0.05715">
			<origin xyz="0 0 0" rpy="0 0 0" />
		</xacro:inertial_cylinder>
	</link>

	<link name="back_left_wheel">
		<visual>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
			<material name="yellow" />
		</visual>
		<collision>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</collision>
		<xacro:inertial_cylinder mass = "0.1" radius="0.03175" length="0.0254">
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</xacro:inertial_cylinder>
	</link>

	<link name="back_right_wheel">
		<visual>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
			<material name="yellow" />
		</visual>
		<collision>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</collision>
		<xacro:inertial_cylinder mass = "0.1" radius="0.03175" length="0.0254">
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</xacro:inertial_cylinder>
	</link>

	<link name="front_left_wheel">
		<visual>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
			<material name="yellow" />
		</visual>
		<collision>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</collision>
		<xacro:inertial_cylinder mass = "0.1" radius="0.03175" length="0.0254">
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</xacro:inertial_cylinder>
	</link>

	<link name="front_right_wheel">
		<visual>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
			<material name="yellow" />
		</visual>
		<collision>
			<geometry>
				<cylinder radius="0.03175" length="0.0254"/>	
			</geometry>
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</collision>
		<xacro:inertial_cylinder mass = "0.1" radius="0.03175" length="0.0254">
			<origin xyz="0 0 0" rpy="1.57 0 0" />
		</xacro:inertial_cylinder>
	</link>

	<joint name="base_joint" type="fixed">
		<parent link="base_footprint" />
		<child link="base_link" />
		<origin xyz="0 0 0.07747" rpy="0 0 0" />	
	</joint>

	<joint name="base_lidar_joint" type="fixed">
		<parent link="base_link" />
		<child link="lidar_link" />
		<origin xyz="-0.07 0 0.060335" rpy="0 0 0" />
	</joint>

	<joint name="base_back_left_wheel_joint" type="continuous">
		<parent link="base_link" />
		<child link="back_left_wheel" />
		<origin xyz="-0.060335 0.0635 -0.04572" rpy="0 0 0" />
		<axis xyz="0 1 0" />
	</joint>

	<joint name="base_back_right_wheel_joint" type="continuous">
		<parent link="base_link" />
		<child link="back_right_wheel" />
		<origin xyz="-0.060335 -0.0635 -0.04572" rpy="0 0 0" />
		<axis xyz="0 1 0" />
	</joint>

	<joint name="base_front_left_wheel_joint" type="continuous">
		<parent link="base_link" />
		<child link="front_left_wheel" />
		<origin xyz="0.060335 0.0635 -0.04572" rpy="0 0 0" />
		<axis xyz="0 1 0" />
	</joint>

	<joint name="base_front_right_wheel_joint" type="continuous">
		<parent link="base_link" />
		<child link="front_right_wheel" />
		<origin xyz="0.060335 -0.0635 -0.04572" rpy="0 0 0" />
		<axis xyz="0 1 0" />
	</joint>

	<joint name='imu_joint' type='fixed'>
		<parent>base_link</parent>
		<child>imu_link</child>
		<pose relative_to="base_link">0.0 0.0 0.01 0 0 0</pose>
	</joint>

	<link name='imu_link'>
		<pose relative_to="imu_joint"/>
		<visual name="imu_link_visual">
			<geometry>
			<box><size>
				0.1 0.1 0.1
			</size></box>
			</geometry>
		</visual>

		<collision name="imu_link_collision">
			<geometry>
			<box><size>
				0.1 0.1 0.1
			</size></box>
			</geometry>
		</collision>

		<xacro:inertial_box mass ="0.1" x="0.1" y="0.1" z="0.1">
			<origin xyz="0 0 0" rpy="0 0 0" />
		</xacro:inertial_box>

		<sensor name="imu_sensor" type="imu">
			<always_on>true</always_on>
			<update_rate>100</update_rate>
			<visualize>true</visualize>
			<topic>demo/imu</topic>
			<gz_frame_id>imu_link</gz_frame_id>
			<imu>
			<angular_velocity>
				<x>
				<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
					<bias_mean>0.0000075</bias_mean>
					<bias_stddev>0.0000008</bias_stddev>
				</noise>
				</x>
				<y>
				<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
					<bias_mean>0.0000075</bias_mean>
					<bias_stddev>0.0000008</bias_stddev>
				</noise>
				</y>
				<z>
				<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>2e-4</stddev>
					<bias_mean>0.0000075</bias_mean>
					<bias_stddev>0.0000008</bias_stddev>
				</noise>
				</z>
			</angular_velocity>
			<linear_acceleration>
				<x>
				<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
					<bias_mean>0.1</bias_mean>
					<bias_stddev>0.001</bias_stddev>
				</noise>
				</x>
				<y>
				<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
					<bias_mean>0.1</bias_mean>
					<bias_stddev>0.001</bias_stddev>
				</noise>
				</y>
				<z>
				<noise type="gaussian">
					<mean>0.0</mean>
					<stddev>1.7e-2</stddev>
					<bias_mean>0.1</bias_mean>
					<bias_stddev>0.001</bias_stddev>
				</noise>
				</z>
			</linear_acceleration>
			</imu>
		</sensor>
	</link>

	<plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
		<!-- wheels -->
		<left_joint>base_front_left_wheel_joint base_back_left_wheel_joint </left_joint>
		<right_joint>base_front_right_wheel_joint base_back_right_wheel_joint</right_joint>

		<!-- kinematics -->
		<wheel_separation>0.1016</wheel_separation>
		<wheel_radius>0.03175</wheel_radius>

		<!-- limits -->
		<max_linear_acceleration>0.1</max_linear_acceleration>

		<!-- input -->
		<topic>/demo/cmd_vel</topic>

		<!-- output -->
		<odom_topic>/demo/odom</odom_topic>
		<tf_topic>/tf</tf_topic>

		<frame_id>odom</frame_id>
		<child_frame_id>base_link</child_frame_id>
	</plugin>

	<plugin
		filename="gz-sim-joint-state-publisher-system"
		name="gz::sim::systems::JointStatePublisher">
		<topic>joint_states</topic>
	</plugin>
</robot>
