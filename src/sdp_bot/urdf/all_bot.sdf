<?xml version="1.0" ?>
<sdf version="1.8" xmlns:xacro="http://ros.org/wiki/xacro">
  <model name='all_bot' canonical_link='base_footprint'>

    <!-- Inertial macros -->
    <xacro:macro name="inertial_box" params="mass x y z">
      <inertial>
        <mass>${mass}</mass>
        <inertia>
          <ixx>${(1/12) * mass * (y*y+z*z)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(1/12) * mass * (x*x+z*z)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(1/12) * mass * (x*x+y*y)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

    <xacro:macro name="inertial_cylinder" params="mass radius length">
      <inertial>
        <mass>${mass}</mass>
        <inertia>
          <ixx>${(1/12) * mass * (3*radius*radius + length*length)}</ixx>
          <ixy>0.0</ixy>
          <ixz>0.0</ixz>
          <iyy>${(1/12) * mass * (3*radius*radius + length*length)}</iyy>
          <iyz>0.0</iyz>
          <izz>${(1/2) * mass * (radius*radius)}</izz>
        </inertia>
      </inertial>
    </xacro:macro>

    <!-- Base Footprint -->
    <link name='base_footprint'>
      <must_be_base_link>true</must_be_base_link>
    </link>
    
    <!-- Base Link -->
    <link name='base_link'>
      <pose relative_to="base_joint"/>
      <visual name="base_link_visual">
        <geometry>
          <box>
            <size>0.2413 0.1016 0.0635</size>
          </box>
        </geometry>
        <material>
          <ambient>0 0 0 1</ambient>
          <diffuse>0 0 0 1</diffuse>
        </material>
      </visual>

      <collision name="base_link_collision">
        <geometry>
          <box>
            <size>0.2413 0.1016 0.0635</size>
          </box>
        </geometry>
      </collision>

      <xacro:inertial_box mass="0.5" x="0.2413" y="0.1016" z="0.0635"/>
    </link>

    <joint name='base_joint' type='fixed'>
      <parent>base_footprint</parent>
      <child>base_link</child>
      <pose relative_to="base_footprint">0.0 0.0 0.07747 0 0 0</pose>
    </joint>

    <!-- Wheels -->
    <!-- Back Left Wheel -->
    <link name='back_left_wheel'>
      <pose relative_to="base_back_left_wheel_joint"/>
      <visual name="back_left_wheel_visual">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 1 0 1</ambient>
          <diffuse>1 1 0 1</diffuse>
        </material>
      </visual>

      <collision name="back_left_wheel_collision">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
      </collision>

      <xacro:inertial_cylinder mass="0.1" radius="0.03175" length="0.0254"/>
    </link>

    <joint name="base_back_left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>back_left_wheel</child>
      <pose relative_to="base_link">-0.060335 0.0635 -0.04572 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-inf</lower>
          <upper>inf</upper>
        </limit>
      </axis>
    </joint>

    <!-- Back Right Wheel -->
    <link name='back_right_wheel'>
      <pose relative_to="base_back_right_wheel_joint"/>
      <visual name="back_right_wheel_visual">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 1 0 1</ambient>
          <diffuse>1 1 0 1</diffuse>
        </material>
      </visual>

      <collision name="back_right_wheel_collision">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
      </collision>

      <xacro:inertial_cylinder mass="0.1" radius="0.03175" length="0.0254"/>
    </link>

    <joint name="base_back_right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>back_right_wheel</child>
      <pose relative_to="base_link">-0.060335 -0.0635 -0.04572 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-inf</lower>
          <upper>inf</upper>
        </limit>
      </axis>
    </joint>

    <!-- Front Left Wheel -->
    <link name='front_left_wheel'>
      <pose relative_to="base_front_left_wheel_joint"/>
      <visual name="front_left_wheel_visual">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 1 0 1</ambient>
          <diffuse>1 1 0 1</diffuse>
        </material>
      </visual>

      <collision name="front_left_wheel_collision">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
      </collision>

      <xacro:inertial_cylinder mass="0.1" radius="0.03175" length="0.0254"/>
    </link>

    <joint name="base_front_left_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_left_wheel</child>
      <pose relative_to="base_link">0.060335 0.0635 -0.04572 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-inf</lower>
          <upper>inf</upper>
        </limit>
      </axis>
    </joint>

    <!-- Front Right Wheel -->
    <link name='front_right_wheel'>
      <pose relative_to="base_front_right_wheel_joint"/>
      <visual name="front_right_wheel_visual">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
        <material>
          <ambient>1 1 0 1</ambient>
          <diffuse>1 1 0 1</diffuse>
        </material>
      </visual>

      <collision name="front_right_wheel_collision">
        <pose>0 0 0 1.57 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.03175</radius>
            <length>0.0254</length>
          </cylinder>
        </geometry>
      </collision>

      <xacro:inertial_cylinder mass="0.1" radius="0.03175" length="0.0254"/>
    </link>

    <joint name="base_front_right_wheel_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_right_wheel</child>
      <pose relative_to="base_link">0.060335 -0.0635 -0.04572 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
        <limit>
          <lower>-inf</lower>
          <upper>inf</upper>
        </limit>
      </axis>
    </joint>

    <joint name='imu_joint' type='fixed'>
        <parent>base_link</parent>
        <child>imu_link</child>
        <pose relative_to="base_link">0.0 0.0 0.01 0 0 0</pose>
    </joint>

    <link name='imu_link'>
        <pose relative_to="imu_joint"/>
        <visual name="imu_link_visual">
            <geometry>
            <box><size>
                0.025 0.025 0.0025
            </size></box>
            </geometry>
        </visual>

        <collision name="imu_link_collision">
            <geometry>
            <box><size>
                0.025 0.025 0.0025
            </size></box>
            </geometry>
        </collision>

        <xacro:inertial_box mass="0.1" x="0.025" y="0.025" z="0.0025"/>

        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>/imu</topic>
            <gz_frame_id>imu_link</gz_frame_id>
            <imu>
            <angular_velocity>
                <x>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    <bias_mean>0.0000075</bias_mean>
                    <bias_stddev>0.0000008</bias_stddev>
                </noise>
                </x>
                <y>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    <bias_mean>0.0000075</bias_mean>
                    <bias_stddev>0.0000008</bias_stddev>
                </noise>
                </y>
                <z>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>2e-4</stddev>
                    <bias_mean>0.0000075</bias_mean>
                    <bias_stddev>0.0000008</bias_stddev>
                </noise>
                </z>
            </angular_velocity>
            <linear_acceleration>
                <x>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    <bias_mean>0.1</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                </noise>
                </x>
                <y>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    <bias_mean>0.1</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                </noise>
                </y>
                <z>
                <noise type="gaussian">
                    <mean>0.0</mean>
                    <stddev>1.7e-2</stddev>
                    <bias_mean>0.1</bias_mean>
                    <bias_stddev>0.001</bias_stddev>
                </noise>
                </z>
            </linear_acceleration>
            </imu>
        </sensor>
    </link>

    <!-- Plugins -->
    <!-- Skid Steering Plugin for 4WD -->
    <plugin filename="gz-sim-diff-drive-system" name="gz::sim::systems::DiffDrive">
      <!-- left wheels -->
      <left_joint>base_front_left_wheel_joint</left_joint>
      <left_joint>base_back_left_wheel_joint</left_joint>
      
      <!-- right wheels -->
      <right_joint>base_front_right_wheel_joint</right_joint>
      <right_joint>base_back_right_wheel_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.127</wheel_separation>
      <wheel_radius>0.03175</wheel_radius>

      <!-- limits -->
      <max_linear_acceleration>0.1</max_linear_acceleration>

      <!-- input -->
      <topic>/cmd_vel</topic>

      <!-- output -->
      <odom_topic>/odom</odom_topic>
      <tf_topic>/tf</tf_topic>

      <frame_id>odom</frame_id>
      <child_frame_id>base_footprint</child_frame_id>
    </plugin>

    <!-- Joint State Publisher Plugin -->
    <plugin
      filename="gz-sim-joint-state-publisher-system"
      name="gz::sim::systems::JointStatePublisher">
      <topic>joint_states</topic>
    </plugin>
  </model>
</sdf>